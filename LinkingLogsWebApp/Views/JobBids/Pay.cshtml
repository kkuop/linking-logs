@model LinkingLogsWebApp.Models.JobBid
@section  stripe{
<script src="https://js.stripe.com/v3/"></script>
<script>
    // Create a Stripe client.
    var stripe = Stripe('pk_test_iFYP7qT2hZ9FEJhA233WhiN000jxaO3Ucj');

    // Create an instance of Elements.
    var elements = stripe.elements();

    // Custom styling can be passed to options when creating an Element.
    // (Note that this demo uses a wider set of styles than the guide below.)
    var style = {
        base: {
            color: '#32325d',
            fontFamily: '"Helvetica Neue", Helvetica, sans-serif',
            fontSmoothing: 'antialiased',
            fontSize: '16px',
            '::placeholder': {
                color: '#aab7c4'
            }
        },
        invalid: {
            color: '#fa755a',
            iconColor: '#fa755a'
        }
    };

    // Create an instance of the card Element.
    var card = elements.create('card', { style: style });

    // Add an instance of the card Element into the `card-element` <div>.
    card.mount('#card-element');

    // Handle real-time validation errors from the card Element.
    card.addEventListener('change', function (event) {
        var displayError = document.getElementById('card-errors');
        if (event.error) {
            displayError.textContent = event.error.message;
        } else {
            displayError.textContent = '';
        }
    });

    // Handle form submission.
    var form = document.getElementById('payment-form');
    form.addEventListener('submit', function (event) {
        event.preventDefault();

        stripe.createToken(card).then(function (result) {
            if (result.error) {
                // Inform the user if there was an error.
                var errorElement = document.getElementById('card-errors');
                errorElement.textContent = result.error.message;
            } else {
                // Send the token to your server.
                stripeTokenHandler(result.token);
            }
        });
    });

    // Submit the form with the token ID.
    function stripeTokenHandler(token) {
        // Insert the token ID into the form so it gets submitted to the server
        var form = document.getElementById('payment-form');
        var hiddenInput = document.createElement('input');
        hiddenInput.setAttribute('type', 'hidden');
        hiddenInput.setAttribute('name', 'stripeToken');
        hiddenInput.setAttribute('value', token.id);
        form.appendChild(hiddenInput);

        // Submit the form
        form.submit();
    }
</script>
}
@{
    ViewData["Title"] = "Bid";
    Layout = "~/Views/Shared/_TruckerLayout.cshtml";
}

<div class="container-fluid">
    <div class="row justify-content-center">
        <div class="col-sm-6">
            <div class="row ll-form-shadow">
                <div class="col">
                    <div class="row">
                        <div class="col text-center">
                            <h2 class="ll-form-header">Pay</h2>
                            <hr />
                        </div>
                    </div>
                    <div class="row">
                        <div class="col">
                            <form asp-action="Pay">
                                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                                <div class="form-group">
                                    <input type="hidden" asp-for="@Model.JobBidId" class="form-control" />
                                    <span asp-validation-for="@Model.JobBidId" class="text-danger"></span>
                                </div>
                                <div class="form-group">
                                    <label asp-for="@Model.AmountBid" class="control-label"></label>
                                    <input asp-for="@Model.AmountBid" class="form-control" readonly />
                                    <span asp-validation-for="@Model.AmountBid" class="text-danger"></span>
                                </div>
                                <div class="form-group">
                                    <input type="hidden" value="@Model.JobId" asp-for="@Model.JobId" class="form-control" />
                                    <span asp-validation-for="@Model.JobId" class="text-danger"></span>
                                </div>
                            </form>
                            <form action="/JobBids/Pay" method="post" id="payment-form">
                                <div class="form-row">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text">Credit or debit card</span>
                                    </div>
                                    <div id="card-element">
                                        <!-- A Stripe Element will be inserted here. -->
                                    </div>

                                    <!-- Used to display form errors. -->
                                    <div id="card-errors" role="alert"></div>
                                </div>

                                <button class="btn btn-success" style="margin-top:8px">Submit Payment</button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
